def ARRAY

pipeline {
    agent any
    tools {
        maven 'maven'
        jdk 'JDK 17'
    }
    options {
        // This is required if you want to clean before build
        skipDefaultCheckout(true)
        
        // Ontly keep 5 jobs history and 2 jobs artifacts
        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '2'))
    }
    parameters {
        string(name: 'CTP_URL', description: 'Parasoft CTP URL')
        string(name: 'DTP_USER', description: 'Parasoft DTP Username')
        string(name: 'DTP_PASS', description: 'Parasoft DTP Password')


        // Add other parameters as needed
    }
    environment {
        // App Settings
        app_name = 'spring-petclinic-microservices' // top level DTP Project

        envId = '32' // need to be dynamically acquired via curl

        PUBLIC_IP = sh(script: """curl -s https://httpbin.org/ip | jq -r '.origin'""", returnStdout: true).trim()


    stages {
        stage('Set Up') {
            steps {
                // Clean before build
                cleanWs()

                // Checkout project
                checkout([$class: 'GitSCM', 
                    branches: [[name: 'master']], 
                    userRemoteConfigs: [[url: 'https://github.com/gtrofimov/spring-petclinic-microservices.git']]])
                
                // set GID
                script {
                    env.GID = sh(script: 'id -g jenkins', returnStdout: true).trim()
                }
                                             
                // get Impacted Tests for current deployment and baseline build
                sh """
                    curl -X 'GET' \
                    -u '${DTP_USER}:${DTP_PASS}' \
                    -H 'accept: application/json' \
                    ${CTP_URL}/em/api/v3/environments/${envId}/coverage/impactedTests?baselineBuildId=latest  > impactedTests.json || true
                    """
                }
            }   
        
        stage('Test') {
            when { equals expected: true, actual: true}
            steps {
                script {
                    // get list of impacted Test from Json file
                    def testNames = sh(script: "jq -r '.[] | select(.analysisType == \"FT\") | .testName' impactedTests.json | paste -sd \",\" -", returnStdout: true).trim()
                    
                    // Run Selenium tests with Maven using impactedTests as parameters
                    sh """
                        echo ${testNames}
                        cd spring-petclinic-selenium-tests
                        mvn clean test \
                        -DbaseUrl='http://${PUBLIC_IP}:8099' \
                        -DgridUrl='http://${PUBLIC_IP}:4444/wd/hub' \
                        -DenvId=${envId} \
                        -DctpUrl='${CTP_URL}' \
                        -Dtest='${testNames}'
                    """
                }                
            }    
        }
    }
    post {

        // Clean after build
        always {
            sh  '''
                echo "cleaning up..."
                rm -rf "jtest_agent"
                rm -rf "jtestcov"
                '''
        }
    }
}
